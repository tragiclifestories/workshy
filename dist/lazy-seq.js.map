{"version":3,"sources":["lazy-seq.js"],"names":[],"mappings":"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","file":"lazy-seq.js","sourcesContent":["import takeGen from './take';\n\nclass LazySeq {\n    constructor(gen, args, parent) {\n        this._generator = gen;\n        this._args = args;\n        if (parent) this._args.push(parent);\n    }\n\n    [Symbol.iterator]() {\n        return this._generator.apply(this, this._args);\n    }\n\n    take(n) {\n        return new LazySeq(takeGen, [n], this);\n    }\n\n    drop(n) {\n        let dropGen = function *(n, iterable) {\n            let x = 0;\n            for (let val of iterable) {\n                if (n <= x++) yield val; \n            }\n        }\n        return new LazySeq(dropGen, [n], this);\n    }\n\n    map(fn) {\n        let mapGen = function* (fn, iterable) {\n            for (let val of iterable) yield fn(val);\n        };\n        return new LazySeq(mapGen, [fn], this);\n    }\n\n    filter(fn) {\n        let filterGen = function* (fn, iterable) {\n            for (let val of iterable) {\n                if (fn(val)) yield val; \n            }\n        };\n\n        return new LazySeq(filterGen, [fn], this);\n    }\n\n    dropWhile(fn) {\n        let dropWhileGen = function* (fn, iterable) {\n            let isBlocked = true;\n            for (let val of iterable) {\n                if (isBlocked) isBlocked = fn(val);\n                if (!isBlocked) yield val;\n            }\n        }\n        return new LazySeq(dropWhileGen, [fn], this);\n    }\n\n    takeWhile(fn) {\n        let takeWhileGen = function* (fn, iterable) {\n            let isOpen = true;\n            for (let val of iterable) {\n                if (isOpen) (isOpen = fn(val)) && (yield val);\n                else break;\n            }\n        }\n\n        return new LazySeq(takeWhileGen, [fn], this);\n    }\n\n    takeUntil(fn) {\n        let inverted = (x) => !(fn(x));\n        return this.takeWhile(inverted);\n    }\n\n    dropUntil(fn) {\n         let inverted = (x) => !(fn(x));\n        return this.dropWhile(inverted);   \n    }\n\n    toArray() {\n        let result = [];\n        for (let val of this)  {\n                result.push(val);\n            }\n        return result;\n    }\n\n    reduce(fn, acc) {\n        let i = 0;\n        for (let val of this) {\n            if (!i++ && typeof acc === 'undefined') acc = val;\n            else acc = fn(acc, val);\n        }\n\n        return acc;\n    }\n}\n\nexport default LazySeq;"],"sourceRoot":"/source/"}