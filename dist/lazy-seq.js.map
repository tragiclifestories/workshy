{"version":3,"sources":["lazy-seq.js"],"names":[],"mappings":"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","file":"lazy-seq.js","sourcesContent":["import generators from './generators';\n\nclass LazySeq {\n    constructor(gen, args, parent) {\n        this._generator = gen;\n        this._args = args;\n        if (parent) this._args.push(parent);\n    }\n\n    [Symbol.iterator]() {\n        return this._generator.apply(this, this._args);\n    }\n\n    chunk(n) {\n        return new LazySeq(generators.chunk, [n], this);\n    }\n\n    fill(val, start, end) {\n        return new LazySeq(generators.fill, [val, start, end], this);\n    }\n\n    compact() {\n        return this.filter((x) => x);\n    }\n\n    take(n) {\n        return new LazySeq(generators.take, [n], this);\n    }\n\n    drop(n) {\n        return new LazySeq(generators.drop, [n], this);\n    }\n\n    map(fn) {\n        return new LazySeq(generators.map, [fn], this);\n    }\n\n    filter(fn) {\n        return new LazySeq(generators.filter, [fn], this);\n    }\n\n    dropWhile(fn) {\n        return new LazySeq(generators.dropWhile, [fn], this);\n    }\n\n    takeWhile(fn) {\n        return new LazySeq(generators.takeWhile, [fn], this);\n    }\n\n    takeUntil(fn) {\n        let inverted = (x) => !(fn(x));\n        return this.takeWhile(inverted);\n    }\n\n    dropUntil(fn) {\n        let inverted = (x) => !(fn(x));\n        return this.dropWhile(inverted);   \n    }\n\n    toArray() {\n        return this.reduce((acc, item) => acc.concat([item]), []);\n    }\n\n    reduce(fn, acc) {\n        let i = 0;\n        for (let val of this) \n            if (!i++ && typeof acc === 'undefined') acc = val;\n            else acc = fn(acc, val);\n\n        return acc;\n    }\n}\n\nexport default LazySeq;"],"sourceRoot":"/source/"}